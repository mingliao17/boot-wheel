server:
  port: 1973
  servlet:
    context-path: /war

spring:
  #数据库
  datasource:
    name: ceshi_tygl
    driver-class-name: oracle.jdbc.OracleDriver
    url: jdbc:oracle:thin:@127.0.0.1:6000:orcl
    username: tygl
    password: tygl#20200309
    type: com.alibaba.druid.pool.DruidDataSource #默认连接池HikariCP修改为druid
    druid: #/druid/index.html
      initial-size: 5   #初始化连接个数
      min-idle: 5       #最小空闲连接个数
      max-active: 20    #最大连接个数
      max-wait: 60000    #获取连接时最大等待时间，单位毫秒。
      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 30000     #配置一个连接在池中最小生存的时间，单位是毫秒
      test-on-borrow: false        #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-while-idle: true
      test-on-return: false        #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      validation-query: select 1 from dual #用来检测连接是否有效的sql
      pool-prepared-statements: false #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      max-pool-prepared-statement-per-connection-size: -1 #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      filters: stat,wall,log4j #通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat，日志用的filter:log4j，防御sql注入的filter:wall
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 #通过connectProperties属性来打开mergeSql功能；慢SQL记录
      stat-view-servlet: #druid页面的用户信息
        url-pattern: /druid/*
        login-username: gailun
        login-password: password.druid
  #缓存
  redis:
    host: 127.0.0.1    #地址
    port: 5731    #端口
    password: redis92    #密码
    jedis:
      pool:
        max-active: 100   #连接池最大连接数（使用负值表示没有限制）
        max-wait: 100   #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8   #连接池中的最大空闲连接
        min-idle: 0   #连接池中的最小空闲连接
        maxWaitMillis: 2000   #请求连接最大等待时间（毫秒），默认无限制，超出时间抛出异常
    timeout: 2000
  #消息队列
  rabbitmq:
    host: 127.0.0.1
    username: rabbitmq
    password: rabbitmq
    port: 9200

#isc配置
iscservicesadapter:
  uri: http://127.0.0.1:17010/isc_frontmv_serv
